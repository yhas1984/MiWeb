import { type NextRequest, NextResponse } from "next/server"
import { getCurrentRates } from "@/lib/exchange-rate-service"

// Definimos la interfaz para los mensajes
interface Message {
  role: "user" | "assistant" | "system"
  content: string
}

export async function POST(request: NextRequest) {
  try {
    // Asegurarse de que el cuerpo de la solicitud es v√°lido
    let requestBody
    try {
      requestBody = await request.json()
    } catch (parseError) {
      console.error("Error al parsear el cuerpo de la solicitud:", parseError)
      return NextResponse.json(
        { error: "Formato de solicitud inv√°lido", details: "El cuerpo de la solicitud no es un JSON v√°lido" },
        { status: 400 },
      )
    }

    const { messages } = requestBody as { messages: Message[] }

    if (!messages || !Array.isArray(messages)) {
      return NextResponse.json(
        { error: "Formato de solicitud inv√°lido", details: "El campo 'messages' es requerido y debe ser un array" },
        { status: 400 },
      )
    }

    // Obtenemos las tasas actuales usando el servicio
    const rates = getCurrentRates()
    const standardRate = rates.standardRate
    const premiumRate = rates.premiumRate

    // Registrar las tasas para depuraci√≥n
    console.log(`[Fallback] Usando tasas en el chat: Est√°ndar=${standardRate}, Premium=${premiumRate}`)

    // Obtener el √∫ltimo mensaje del usuario
    const lastUserMessage = [...messages].reverse().find((msg) => msg.role === "user")?.content || ""

    // Respuestas predefinidas basadas en palabras clave
    let responseText = ""

    if (
      lastUserMessage.toLowerCase().includes("tasa") ||
      lastUserMessage.toLowerCase().includes("cambio") ||
      lastUserMessage.toLowerCase().includes("euro") ||
      lastUserMessage.toLowerCase().includes("bolivar")
    ) {
      responseText = `Actualmente manejamos dos tipos de tasas para el cambio de Euros a Bol√≠vares:

üí∞ Tasa est√°ndar (usuarios no registrados): 1 EUR = ${standardRate} VES
üî¥ Tasa premium (usuarios registrados): 1 EUR = ${premiumRate} VES

Te recomendamos registrarte para acceder a nuestra tasa premium m√°s ventajosa.`
    } else if (
      lastUserMessage.toLowerCase().includes("registro") ||
      lastUserMessage.toLowerCase().includes("registrar")
    ) {
      responseText = `Para registrarte y acceder a nuestra tasa premium, simplemente:

1. Ve a la secci√≥n "Tasa del D√≠a" en nuestra p√°gina principal
2. Ingresa tu correo electr√≥nico en el campo "¬øYa est√°s registrado?"
3. Sigue las instrucciones para verificar tu cuenta

Una vez verificado, tendr√°s acceso a nuestra tasa premium de ${premiumRate} VES por 1 EUR.`
    } else if (
      lastUserMessage.toLowerCase().includes("contacto") ||
      lastUserMessage.toLowerCase().includes("correo") ||
      lastUserMessage.toLowerCase().includes("tel√©fono") ||
      lastUserMessage.toLowerCase().includes("whatsapp")
    ) {
      responseText = `Puedes contactarnos a trav√©s de:

üìß Email: contacto@tuenvioexpress.es
üì± WhatsApp: +44 7723 456789

Nuestro equipo estar√° encantado de ayudarte con cualquier consulta.`
    } else if (
      lastUserMessage.toLowerCase().includes("env√≠o") ||
      lastUserMessage.toLowerCase().includes("paquete") ||
      lastUserMessage.toLowerCase().includes("enviar")
    ) {
      responseText = `Es importante aclarar que Tu Envio Express, a pesar de su nombre, NO se dedica al env√≠o de paquetes o mercanc√≠as.

Somos una empresa especializada √öNICAMENTE en servicios de cambio de divisas entre Euros (EUR) y Bol√≠vares venezolanos (VES).

Si necesitas informaci√≥n sobre nuestras tasas de cambio, estar√© encantado de ayudarte.`
    } else {
      // Respuesta gen√©rica
      responseText = `Gracias por tu mensaje. Soy el asistente virtual de Tu Envio Express, especializada en cambio de divisas entre Euros y Bol√≠vares venezolanos.

Actualmente ofrecemos:
- Tasa est√°ndar: 1 EUR = ${standardRate} VES
- Tasa premium: 1 EUR = ${premiumRate} VES

¬øEn qu√© m√°s puedo ayudarte hoy?`
    }

    // Devolver la respuesta en el formato esperado
    return NextResponse.json({
      text: responseText,
      message: responseText,
      choices: [
        {
          message: {
            content: responseText,
            role: "assistant",
          },
        },
      ],
    })
  } catch (error) {
    console.error("[Fallback] Error general en el chat:", error)
    return NextResponse.json(
      {
        error: "Error al procesar el mensaje",
        details: error instanceof Error ? error.message : "Error desconocido",
      },
      { status: 500 },
    )
  }
}
